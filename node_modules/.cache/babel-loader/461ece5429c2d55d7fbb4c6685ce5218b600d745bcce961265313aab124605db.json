{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\yosra\\\\Summer-Internship\\\\Projects\\\\React\\\\Sentimental-Analysis-React.js\\\\src\\\\Components\\\\Audio.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = ({\n  audioFile,\n  onPlay\n}) => {\n  _s();\n  const audioRef = useRef(null);\n  const handlePlay = () => {\n    audioRef.current.play();\n    if (onPlay) {\n      onPlay();\n    }\n  };\n  const handleAudioEnded = () => {\n    // Clear the interval when audio ends\n    clearInterval(interval);\n  };\n  useEffect(() => {\n    // Clean up interval on unmount\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  let interval;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: audioFile,\n      controls: true,\n      onEnded: handleAudioEnded,\n      children: \"Your browser does not support the audio element.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePlay,\n      children: \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioPlayer, \"+byXHHf22FzALubYzgUeSQRtz1Y=\");\n_c = AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AudioPlayer","audioFile","onPlay","_s","audioRef","useRef","handlePlay","current","play","handleAudioEnded","clearInterval","interval","children","ref","src","controls","onEnded","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dell/yosra/Summer-Internship/Projects/React/Sentimental-Analysis-React.js/src/Components/Audio.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AudioPlayer = ({ audioFile, onPlay }) => {\r\n  const audioRef = useRef(null);\r\n\r\n  const handlePlay = () => {\r\n    audioRef.current.play();\r\n    if (onPlay) {\r\n      onPlay();\r\n    }\r\n  };\r\n\r\n  const handleAudioEnded = () => {\r\n    // Clear the interval when audio ends\r\n    clearInterval(interval);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Clean up interval on unmount\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  let interval;\r\n\r\n  return (\r\n    <div>\r\n      <audio ref={audioRef} src={audioFile} controls onEnded={handleAudioEnded}>\r\n        Your browser does not support the audio element.\r\n      </audio>\r\n      <button onClick={handlePlay}>Play</button>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAMC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBF,QAAQ,CAACG,OAAO,CAACC,IAAI,CAAC,CAAC;IACvB,IAAIN,MAAM,EAAE;MACVA,MAAM,CAAC,CAAC;IACV;EACF,CAAC;EAED,MAAMO,gBAAgB,GAAGA,CAAA,KAAM;IAC7B;IACAC,aAAa,CAACC,QAAQ,CAAC;EACzB,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd;IACA,OAAO,MAAM;MACXa,aAAa,CAACC,QAAQ,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIA,QAAQ;EAEZ,oBACEZ,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAOc,GAAG,EAAET,QAAS;MAACU,GAAG,EAAEb,SAAU;MAACc,QAAQ;MAACC,OAAO,EAAEP,gBAAiB;MAAAG,QAAA,EAAC;IAE1E;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACRrB,OAAA;MAAQsB,OAAO,EAAEf,UAAW;MAAAM,QAAA,EAAC;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;AAACjB,EAAA,CAhCIH,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}